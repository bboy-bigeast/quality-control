# Generated by Django 5.2.4 on 2025-08-01 09:01

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdhesiveProduct',
            fields=[
                ('id', models.UUIDField(db_column='id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('change_log', models.JSONField(default=list, verbose_name='变更日志')),
                ('batch_number', models.CharField(max_length=80, unique=True, verbose_name='批号')),
                ('product_id', models.CharField(max_length=80, verbose_name='产品牌号')),
                ('production_line', models.CharField(max_length=80, verbose_name='产线')),
                ('inspector', models.CharField(max_length=80, verbose_name='检测人')),
                ('test_date', models.DateField(default=django.utils.timezone.now, verbose_name='测试日期')),
                ('sample_type', models.CharField(choices=[('single', '单批样'), ('continuous', '装车样'), ('special', '特殊样')], default='single', max_length=80, verbose_name='样品类别')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('physical_judgment', models.CharField(choices=[('qualified', '合格'), ('unqualified', '不合格'), ('pending', '待判定')], default='pending', max_length=80, verbose_name='理化性能判定')),
                ('tape_judgment', models.CharField(choices=[('qualified', '合格'), ('unqualified', '不合格'), ('pending', '待判定')], default='pending', max_length=80, verbose_name='胶带性能判定')),
                ('finally_judgment', models.CharField(choices=[('qualified', '合格'), ('unqualified', '不合格'), ('pending', '待判定')], default='pending', max_length=80, verbose_name='最终判定')),
                ('appearance', models.CharField(blank=True, default='合格', max_length=20, null=True, verbose_name='外观')),
                ('solid_content', models.FloatField(blank=True, null=True, verbose_name='固含')),
                ('viscosity', models.FloatField(blank=True, null=True, verbose_name='粘度')),
                ('acid_value', models.FloatField(blank=True, null=True, verbose_name='酸值')),
                ('moisture', models.FloatField(blank=True, null=True, verbose_name='水分')),
                ('residue', models.FloatField(blank=True, null=True, verbose_name='残单')),
                ('molecular_weight', models.FloatField(blank=True, null=True, verbose_name='重均分子量')),
                ('pdi', models.FloatField(blank=True, null=True, verbose_name='PDI')),
                ('color', models.FloatField(blank=True, null=True, verbose_name='色度')),
                ('initial_stick', models.FloatField(blank=True, null=True, verbose_name='初粘')),
                ('peel', models.FloatField(blank=True, null=True, verbose_name='剥离')),
                ('high_temp_hold', models.FloatField(blank=True, null=True, verbose_name='高温持粘')),
                ('normal_temp_hold', models.FloatField(blank=True, null=True, verbose_name='常温持粘')),
                ('peel_under_load', models.FloatField(blank=True, null=True, verbose_name='定荷重剥离')),
            ],
            options={
                'verbose_name': '胶粘剂产品',
                'verbose_name_plural': '胶粘剂产品',
                'db_table': 'adhesive_products',
            },
        ),
        migrations.CreateModel(
            name='AnalysisCenter',
            fields=[
                ('id', models.UUIDField(db_column='id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('change_log', models.JSONField(default=list, verbose_name='变更日志')),
                ('analysis_id', models.CharField(max_length=50, unique=True, verbose_name='分析编号')),
                ('analysis_type', models.CharField(choices=[('quality', '质量分析'), ('process', '过程分析'), ('trend', '趋势分析'), ('comparative', '对比分析'), ('root_cause', '根本原因分析')], max_length=20, verbose_name='分析类型')),
                ('title', models.CharField(max_length=200, verbose_name='分析标题')),
                ('start_date', models.DateField(verbose_name='起始日期')),
                ('end_date', models.DateField(verbose_name='结束日期')),
                ('performed_by', models.CharField(max_length=50, verbose_name='分析人')),
                ('performed_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='分析日期')),
                ('data_source', models.CharField(max_length=100, verbose_name='数据源')),
                ('findings', models.TextField(blank=True, verbose_name='分析发现')),
                ('recommendations', models.TextField(blank=True, verbose_name='改进建议')),
                ('visualization', models.FileField(blank=True, upload_to='analytics/', verbose_name='可视化文件')),
            ],
            options={
                'verbose_name': '分析中心',
                'verbose_name_plural': '分析中心',
                'db_table': 'analysis_center',
            },
        ),
        migrations.CreateModel(
            name='DryFilmProduct',
            fields=[
                ('id', models.UUIDField(db_column='id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('change_log', models.JSONField(default=list, verbose_name='变更日志')),
                ('batch_number', models.CharField(max_length=80, verbose_name='批号')),
                ('product_id', models.CharField(max_length=80, verbose_name='产品牌号')),
                ('production_line', models.CharField(max_length=80, verbose_name='产线')),
                ('inspector', models.CharField(max_length=80, verbose_name='检测人')),
                ('test_date', models.DateField(verbose_name='测试日期')),
                ('sample_type', models.CharField(choices=[('single', '单批样'), ('continuous', '装车样'), ('special', '特殊样')], default='single', max_length=30, verbose_name='样品类别')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('factory_judgment', models.CharField(choices=[('qualified', '合格'), ('unqualified', '不合格'), ('pending', '待判定'), ('no_standard', '无标准')], default='pending', max_length=50, verbose_name='出厂判定')),
                ('internal_judgment', models.CharField(choices=[('qualified', '合格'), ('unqualified', '不合格'), ('pending', '待判定'), ('no_standard', '无标准')], default='pending', max_length=50, verbose_name='内控判定')),
                ('appearance', models.CharField(blank=True, default='合格', max_length=20, null=True, verbose_name='外观')),
                ('solid_content', models.FloatField(blank=True, null=True, verbose_name='固含')),
                ('viscosity', models.IntegerField(blank=True, null=True, verbose_name='粘度')),
                ('acid_value', models.FloatField(blank=True, null=True, verbose_name='酸值')),
                ('moisture', models.FloatField(blank=True, null=True, verbose_name='水分')),
                ('residue', models.FloatField(blank=True, null=True, verbose_name='残单')),
                ('molecular_weight', models.IntegerField(blank=True, null=True, verbose_name='重均分子量')),
                ('pdi', models.FloatField(blank=True, null=True, verbose_name='PDI')),
                ('color', models.FloatField(blank=True, null=True, verbose_name='色度')),
                ('inhibitor', models.FloatField(blank=True, null=True, verbose_name='阻聚剂')),
                ('conversion_rate', models.FloatField(blank=True, null=True, verbose_name='转化率')),
                ('loading_temp', models.FloatField(blank=True, null=True, verbose_name='装车温度')),
            ],
            options={
                'verbose_name': '干膜产品',
                'verbose_name_plural': '干膜产品',
                'db_table': 'dry_film_products',
            },
        ),
        migrations.CreateModel(
            name='DryFilmStandard',
            fields=[
                ('id', models.UUIDField(db_column='id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('change_log', models.JSONField(default=list, verbose_name='变更日志')),
                ('product_id', models.CharField(max_length=50, unique=True, verbose_name='产品牌号')),
                ('resp_persional', models.CharField(max_length=50, verbose_name='负责人')),
                ('maintainer', models.CharField(max_length=50, verbose_name='维护人')),
                ('updata_date', models.DateField(default=django.utils.timezone.now, verbose_name='更新日期')),
                ('inside_specifications', models.JSONField(verbose_name='内部标准')),
                ('outside_specifications', models.JSONField(verbose_name='外部标准')),
            ],
            options={
                'verbose_name': '干膜产品标准',
                'verbose_name_plural': '干膜产品标准',
                'db_table': 'dry_film_standard',
            },
        ),
        migrations.CreateModel(
            name='RawMaterial',
            fields=[
                ('id', models.UUIDField(db_column='id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('change_log', models.JSONField(default=list, verbose_name='变更日志')),
                ('batch_number', models.CharField(max_length=20, unique=True, verbose_name='原料批号')),
                ('material_name', models.CharField(max_length=20, verbose_name='原料名称')),
                ('material_type', models.CharField(choices=[('resin', '树脂'), ('solvent', '溶剂'), ('additive', '添加剂'), ('monomer', '单体'), ('other', '其他')], default='other', max_length=20, verbose_name='原料类型')),
                ('supplier', models.CharField(default='defalt', max_length=100, verbose_name='供应商')),
                ('received_date', models.DateField(default=django.utils.timezone.now, verbose_name='入库日期')),
                ('expiry_date', models.DateField(verbose_name='有效期至')),
                ('inspector', models.CharField(max_length=50, verbose_name='检验人')),
                ('appearance', models.CharField(default='合格', max_length=100, null=True, verbose_name='外观')),
                ('purity', models.FloatField(blank=True, null=True, verbose_name='纯度(%)')),
                ('moisture', models.FloatField(blank=True, null=True, verbose_name='水分含量(%)')),
                ('inhibitor', models.FloatField(blank=True, null=True, verbose_name='阻聚剂含量(%)')),
                ('test_result', models.CharField(choices=[('qualified', '合格'), ('unqualified', '不合格'), ('pending', '待判定')], default='pending', max_length=20, verbose_name='检验结果')),
                ('peak_position', models.FloatField(blank=True, null=True, verbose_name='出峰位置')),
                ('ethanol_content', models.FloatField(blank=True, null=True, verbose_name='乙醇含量')),
                ('acidity', models.FloatField(blank=True, null=True, verbose_name='酸度')),
                ('remarks', models.CharField(max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '原料',
                'verbose_name_plural': '原料',
                'db_table': 'raw_material',
            },
        ),
        migrations.CreateModel(
            name='ReportCenter',
            fields=[
                ('id', models.UUIDField(db_column='id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('change_log', models.JSONField(default=list, verbose_name='变更日志')),
                ('report_number', models.CharField(max_length=50, unique=True, verbose_name='报告编号')),
                ('report_type', models.CharField(choices=[('daily', '日常报告'), ('monthly', '月度报告'), ('quarterly', '季度报告'), ('yearly', '年度报告'), ('special', '专项报告')], max_length=20, verbose_name='报告类型')),
                ('title', models.CharField(max_length=200, verbose_name='报告标题')),
                ('period_start', models.DateField(verbose_name='报告起始日期')),
                ('period_end', models.DateField(verbose_name='报告结束日期')),
                ('generated_by', models.CharField(max_length=50, verbose_name='生成人')),
                ('generated_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成日期')),
                ('reviewer', models.CharField(blank=True, max_length=50, verbose_name='审核人')),
                ('status', models.CharField(choices=[('draft', '草稿'), ('review', '审核中'), ('approved', '已批准'), ('released', '已发布')], default='draft', max_length=20, verbose_name='状态')),
                ('report_file', models.FileField(upload_to='reports/', verbose_name='报告文件')),
            ],
            options={
                'verbose_name': '报告中心',
                'verbose_name_plural': '报告中心',
                'db_table': 'report_center',
            },
        ),
        migrations.CreateModel(
            name='TrialProduct',
            fields=[
                ('id', models.UUIDField(db_column='id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('change_log', models.JSONField(default=list, verbose_name='变更日志')),
                ('trial_number', models.CharField(max_length=20, verbose_name='小试编号')),
                ('product_id', models.CharField(max_length=20, unique=True, verbose_name='产品牌号')),
                ('test_date', models.DateField(default=django.utils.timezone.now, verbose_name='测试日期')),
                ('responsible', models.CharField(max_length=20, verbose_name='负责人')),
                ('product_type', models.CharField(choices=[('dryfilm', '干膜'), ('adhesive', '胶粘剂'), ('coating', '涂料'), ('ink', '油墨'), ('other', '其他')], max_length=20, verbose_name='产品类型')),
                ('inspector', models.CharField(max_length=50, verbose_name='检验人')),
                ('appearance', models.CharField(blank=True, default='合格', max_length=20, null=True, verbose_name='外观')),
                ('solid_content', models.FloatField(blank=True, null=True, verbose_name='固含')),
                ('viscosity', models.IntegerField(blank=True, null=True, verbose_name='粘度')),
                ('acid_value', models.FloatField(blank=True, null=True, verbose_name='酸值')),
                ('moisture', models.FloatField(blank=True, null=True, verbose_name='水分')),
                ('residue', models.FloatField(blank=True, null=True, verbose_name='残单')),
                ('molecular_weight', models.IntegerField(blank=True, null=True, verbose_name='重均分子量')),
                ('pdi', models.FloatField(blank=True, null=True, verbose_name='PDI')),
                ('color', models.FloatField(blank=True, null=True, verbose_name='色度')),
                ('initial_stick', models.FloatField(blank=True, null=True, verbose_name='初粘')),
                ('peel', models.FloatField(blank=True, null=True, verbose_name='剥离')),
                ('high_temp_hold', models.FloatField(blank=True, null=True, verbose_name='高温持粘')),
                ('normal_temp_hold', models.FloatField(blank=True, null=True, verbose_name='常温持粘')),
                ('peel_under_load', models.FloatField(blank=True, null=True, verbose_name='定荷重剥离')),
                ('remarks', models.TextField(blank=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '小试产品',
                'verbose_name_plural': '小试产品',
                'db_table': 'trial_product',
            },
        ),
    ]
